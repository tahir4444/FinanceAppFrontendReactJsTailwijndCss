name: Frontend CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      htaccess-changed: ${{ steps.check-htaccess.outputs.changed }}
    
    steps:
      - name: 🧾 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: 🔍 Check if .htaccess Changed
        id: check-htaccess
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -q "^\.htaccess$"; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "📝 .htaccess file has changed - will deploy it"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "✅ .htaccess unchanged - skipping htaccess deployment"
          fi

      - name: 🛠 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci

      - name: ✍️ Build Frontend for Server 2
        run: |
          rm -rf dist/
          echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}" > .env
          echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" >> .env
          echo "FRONTEND_URL=${{ secrets.FRONTEND_URL_2 }}" >> .env
          npm run build
          mkdir -p builds/server2
          cp -r dist/* builds/server2/

      - name: 📤 Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-server2
          path: builds/server2/
          retention-days: 1

      - name: 📤 Upload .htaccess (if changed)
        if: steps.check-htaccess.outputs.changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: htaccess-file
          path: .htaccess
          retention-days: 1

  deploy-server2:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Download Server 2 Build
        uses: actions/download-artifact@v4
        with:
          name: build-server2
          path: ./build

      - name: 📥 Download .htaccess (if changed)
        if: needs.build.outputs.htaccess-changed == 'true'
        uses: actions/download-artifact@v4
        with:
          name: htaccess-file
          path: ./

      - name: 🚀 Deploy Build Files to Server 2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER2_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: 'build/*'
          target: ${{ secrets.SERVER2_APP_PATH }}
          strip_components: 1
          rm: true

      - name: 🚀 Deploy .htaccess to Server 2 (if changed)
        if: needs.build.outputs.htaccess-changed == 'true'
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER2_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: '.htaccess'
          target: ${{ secrets.SERVER2_APP_PATH }}
          strip_components: 0

      - name: 🔁 Reload Apache Server 2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER2_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: sudo systemctl reload apache2

      - name: 🌐 Verify Deployment
        run: |
          if curl -sSf ${{ secrets.FRONTEND_URL_2 }} >/dev/null; then
            echo "✅ Frontend is live at ${{ secrets.FRONTEND_URL_2 }}"
          else
            echo "⚠ Frontend may not be accessible yet"
          fi

  deployment-summary:
    needs: [build, deploy-server2]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: 📊 Deployment Summary
        run: |
          echo "🚀 Frontend Deployment completed!"
          if [ "${{ needs.build.outputs.htaccess-changed }}" == "true" ]; then
            echo "📝 .htaccess was updated on Server 2"
          else
            echo "✅ .htaccess was unchanged - skipped deployment"
          fi
